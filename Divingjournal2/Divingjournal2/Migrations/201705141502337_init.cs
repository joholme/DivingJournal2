namespace Divingjournal2.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class init : DbMigration
    {
        public override void Up()
        {
            AddColumn("dbo.Diver_Compression", "transport", c => c.Int(nullable: false));
            AddColumn("dbo.Diver_Compression", "direct", c => c.Int(nullable: false));
            AddColumn("dbo.Diver_Compression", "airType", c => c.Int(nullable: false));
            AddColumn("dbo.Diver_Compression", "nitroxType", c => c.String());
            AddColumn("dbo.Diver_Compression", "repeatedAir", c => c.String());
            AddColumn("dbo.Diver_Compression", "breathingGear", c => c.String());
            AddColumn("dbo.Diver_Compression", "volume", c => c.String());
            AddColumn("dbo.Diver_Compression", "pressure", c => c.String());
            AddColumn("dbo.Diver_Compression", "plannedDepth", c => c.String());
            AddColumn("dbo.Diver_Compression", "plannedTime", c => c.String());
            AddColumn("dbo.Diver_Compression", "courseDive", c => c.String());
            AddColumn("dbo.Diver_Compression", "leftSurface", c => c.String());
            AddColumn("dbo.Diver_Compression", "reachedBottom", c => c.String());
            AddColumn("dbo.Diver_Compression", "leftBottom_Depth", c => c.String());
            AddColumn("dbo.Diver_Compression", "leftBottom_Time", c => c.String());
            AddColumn("dbo.Diver_Compression", "bottomTime", c => c.String());
            AddColumn("dbo.Diver_Compression", "maxDepth", c => c.String());
            AddColumn("dbo.Diver_Compression", "ELD", c => c.String());
            AddColumn("dbo.Diver_Compression", "additionToBottomTime", c => c.String());
            AddColumn("dbo.Diver_Compression", "tableUsed_Meter", c => c.String());
            AddColumn("dbo.Diver_Compression", "tableUsed_Minutes", c => c.String());
            AddColumn("dbo.Diver_Compression", "ascensionToFirstStop", c => c.String());
            AddColumn("dbo.Diver_Compression", "timeAtSafetyStop", c => c.String());
            AddColumn("dbo.Diver_Compression", "isEverythingOK", c => c.String());
            AddColumn("dbo.Diver_Compression", "left18m", c => c.String());
            AddColumn("dbo.Diver_Compression", "left15m", c => c.String());
            AddColumn("dbo.Diver_Compression", "left12m", c => c.String());
            AddColumn("dbo.Diver_Compression", "time12_0m", c => c.String());
            AddColumn("dbo.Diver_Compression", "reached15mInChamber", c => c.String());
            AddColumn("dbo.Diver_Compression", "o2_1", c => c.String());
            AddColumn("dbo.Diver_Compression", "o2_2", c => c.String());
            AddColumn("dbo.Diver_Compression", "o2_3", c => c.String());
            AddColumn("dbo.Diver_Compression", "surfaceInterval", c => c.String());
            AddColumn("dbo.Diver_Compression", "air_1", c => c.String());
            AddColumn("dbo.Diver_Compression", "air_2", c => c.String());
            AddColumn("dbo.Diver_Compression", "air_3", c => c.String());
            AddColumn("dbo.Diver_Compression", "left12mWithoutO2", c => c.String());
            AddColumn("dbo.Diver_Compression", "reachedSurface", c => c.String());
            AddColumn("dbo.Diver_Compression", "timeInChamber", c => c.String());
            AddColumn("dbo.Diver_Compression", "timeAtSea", c => c.String());
            AddColumn("dbo.Diver_Compression", "totalDecompression", c => c.String());
            AddColumn("dbo.Diver_Compression", "totalDivingTime", c => c.String());
            AddColumn("dbo.Diver_Standard", "transport", c => c.Int(nullable: false));
            AddColumn("dbo.Diver_Standard", "direct", c => c.Int(nullable: false));
            AddColumn("dbo.Diver_Standard", "airType", c => c.Int(nullable: false));
            AddColumn("dbo.Diver_Standard", "nitroxType", c => c.String());
            AddColumn("dbo.Diver_Standard", "repeatedAir", c => c.String());
            AddColumn("dbo.Diver_Standard", "breathingGear", c => c.String());
            AddColumn("dbo.Diver_Standard", "volume", c => c.String());
            AddColumn("dbo.Diver_Standard", "pressure", c => c.String());
            AddColumn("dbo.Diver_Standard", "plannedDepth", c => c.String());
            AddColumn("dbo.Diver_Standard", "plannedTime", c => c.String());
            AddColumn("dbo.Diver_Standard", "courseDive", c => c.String());
            AddColumn("dbo.Diver_Standard", "leftSurface", c => c.String());
            AddColumn("dbo.Diver_Standard", "reachedBottom", c => c.String());
            AddColumn("dbo.Diver_Standard", "leftBottom_Depth", c => c.String());
            AddColumn("dbo.Diver_Standard", "leftBottom_Time", c => c.String());
            AddColumn("dbo.Diver_Standard", "bottomTime", c => c.String());
            AddColumn("dbo.Diver_Standard", "maxDepth", c => c.String());
            AddColumn("dbo.Diver_Standard", "ELD", c => c.String());
            AddColumn("dbo.Diver_Standard", "additionToBottomTime", c => c.String());
            AddColumn("dbo.Diver_Standard", "tableUsed_Meter", c => c.String());
            AddColumn("dbo.Diver_Standard", "tableUsed_Minutes", c => c.String());
            AddColumn("dbo.Diver_Standard", "ascensionToFirstStop", c => c.String());
            AddColumn("dbo.Diver_Standard", "timeAtSafetyStop", c => c.String());
            AddColumn("dbo.Diver_Standard", "isEverythingOK", c => c.String());
            AddColumn("dbo.Diver_Standard", "arrived9m", c => c.String());
            AddColumn("dbo.Diver_Standard", "left9m", c => c.String());
            AddColumn("dbo.Diver_Standard", "arrived6m", c => c.String());
            AddColumn("dbo.Diver_Standard", "left6m", c => c.String());
            AddColumn("dbo.Diver_Standard", "arrived3m", c => c.String());
            AddColumn("dbo.Diver_Standard", "left3m", c => c.String());
            AddColumn("dbo.Diver_Standard", "reachedSurface", c => c.String());
            AddColumn("dbo.Diver_Standard", "ascensionTime", c => c.String());
            AddColumn("dbo.Diver_Standard", "totalDivingTime", c => c.String());
            AddColumn("dbo.Diver_Standard", "N2GroupAfterDive", c => c.String());
        }
        
        public override void Down()
        {
            DropColumn("dbo.Diver_Standard", "N2GroupAfterDive");
            DropColumn("dbo.Diver_Standard", "totalDivingTime");
            DropColumn("dbo.Diver_Standard", "ascensionTime");
            DropColumn("dbo.Diver_Standard", "reachedSurface");
            DropColumn("dbo.Diver_Standard", "left3m");
            DropColumn("dbo.Diver_Standard", "arrived3m");
            DropColumn("dbo.Diver_Standard", "left6m");
            DropColumn("dbo.Diver_Standard", "arrived6m");
            DropColumn("dbo.Diver_Standard", "left9m");
            DropColumn("dbo.Diver_Standard", "arrived9m");
            DropColumn("dbo.Diver_Standard", "isEverythingOK");
            DropColumn("dbo.Diver_Standard", "timeAtSafetyStop");
            DropColumn("dbo.Diver_Standard", "ascensionToFirstStop");
            DropColumn("dbo.Diver_Standard", "tableUsed_Minutes");
            DropColumn("dbo.Diver_Standard", "tableUsed_Meter");
            DropColumn("dbo.Diver_Standard", "additionToBottomTime");
            DropColumn("dbo.Diver_Standard", "ELD");
            DropColumn("dbo.Diver_Standard", "maxDepth");
            DropColumn("dbo.Diver_Standard", "bottomTime");
            DropColumn("dbo.Diver_Standard", "leftBottom_Time");
            DropColumn("dbo.Diver_Standard", "leftBottom_Depth");
            DropColumn("dbo.Diver_Standard", "reachedBottom");
            DropColumn("dbo.Diver_Standard", "leftSurface");
            DropColumn("dbo.Diver_Standard", "courseDive");
            DropColumn("dbo.Diver_Standard", "plannedTime");
            DropColumn("dbo.Diver_Standard", "plannedDepth");
            DropColumn("dbo.Diver_Standard", "pressure");
            DropColumn("dbo.Diver_Standard", "volume");
            DropColumn("dbo.Diver_Standard", "breathingGear");
            DropColumn("dbo.Diver_Standard", "repeatedAir");
            DropColumn("dbo.Diver_Standard", "nitroxType");
            DropColumn("dbo.Diver_Standard", "airType");
            DropColumn("dbo.Diver_Standard", "direct");
            DropColumn("dbo.Diver_Standard", "transport");
            DropColumn("dbo.Diver_Compression", "totalDivingTime");
            DropColumn("dbo.Diver_Compression", "totalDecompression");
            DropColumn("dbo.Diver_Compression", "timeAtSea");
            DropColumn("dbo.Diver_Compression", "timeInChamber");
            DropColumn("dbo.Diver_Compression", "reachedSurface");
            DropColumn("dbo.Diver_Compression", "left12mWithoutO2");
            DropColumn("dbo.Diver_Compression", "air_3");
            DropColumn("dbo.Diver_Compression", "air_2");
            DropColumn("dbo.Diver_Compression", "air_1");
            DropColumn("dbo.Diver_Compression", "surfaceInterval");
            DropColumn("dbo.Diver_Compression", "o2_3");
            DropColumn("dbo.Diver_Compression", "o2_2");
            DropColumn("dbo.Diver_Compression", "o2_1");
            DropColumn("dbo.Diver_Compression", "reached15mInChamber");
            DropColumn("dbo.Diver_Compression", "time12_0m");
            DropColumn("dbo.Diver_Compression", "left12m");
            DropColumn("dbo.Diver_Compression", "left15m");
            DropColumn("dbo.Diver_Compression", "left18m");
            DropColumn("dbo.Diver_Compression", "isEverythingOK");
            DropColumn("dbo.Diver_Compression", "timeAtSafetyStop");
            DropColumn("dbo.Diver_Compression", "ascensionToFirstStop");
            DropColumn("dbo.Diver_Compression", "tableUsed_Minutes");
            DropColumn("dbo.Diver_Compression", "tableUsed_Meter");
            DropColumn("dbo.Diver_Compression", "additionToBottomTime");
            DropColumn("dbo.Diver_Compression", "ELD");
            DropColumn("dbo.Diver_Compression", "maxDepth");
            DropColumn("dbo.Diver_Compression", "bottomTime");
            DropColumn("dbo.Diver_Compression", "leftBottom_Time");
            DropColumn("dbo.Diver_Compression", "leftBottom_Depth");
            DropColumn("dbo.Diver_Compression", "reachedBottom");
            DropColumn("dbo.Diver_Compression", "leftSurface");
            DropColumn("dbo.Diver_Compression", "courseDive");
            DropColumn("dbo.Diver_Compression", "plannedTime");
            DropColumn("dbo.Diver_Compression", "plannedDepth");
            DropColumn("dbo.Diver_Compression", "pressure");
            DropColumn("dbo.Diver_Compression", "volume");
            DropColumn("dbo.Diver_Compression", "breathingGear");
            DropColumn("dbo.Diver_Compression", "repeatedAir");
            DropColumn("dbo.Diver_Compression", "nitroxType");
            DropColumn("dbo.Diver_Compression", "airType");
            DropColumn("dbo.Diver_Compression", "direct");
            DropColumn("dbo.Diver_Compression", "transport");
        }
    }
}
